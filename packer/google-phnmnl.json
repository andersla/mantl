{
	"variables":
	{
	  "image_name": "{{env `PACKER_IMAGE_NAME`}}",
	  "source_image_name": "{{env `PACKER_SOURCE_IMAGE_NAME`}}",
      "account_file": "{{env `PACKER_GCE_ACCOUNT_FILE`}}",
      "zone": "{{env `PACKER_GCE_ZONE`}}",
      "project_id": "{{env `PACKER_GCE_PROJECT_ID`}}"
 	},
    "builders": [
    {
      "type": "googlecompute",
      "account_file": "{{user `account_file`}}",
      "project_id": "{{user `project_id`}}",
      "zone": "{{user `zone`}}",
      "ssh_username": "centos",
      "ssh_pty" : "true",
      "source_image": "{{user `source_image_name`}}",
	  "image_name": "{{user `image_name`}}"
    }
    ],
	"provisioners": [
    {
      "type": "shell",
      "execute_command": "{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "scripts": ["{{pwd}}/packer/scripts/ansible.sh"]
    },
	{
	  "type": "ansible-local",
	  "playbook_dir": "{{pwd}}/playbooks",
	  "playbook_file": "{{pwd}}/playbooks/upgrade-packages.yml"
	},
	{
	  "type": "shell",
	  "inline": ["sudo reboot -h now"]
    },
    {
      "type": "shell",
      "pause_before": "10s",
      "start_retry_timeout": "15m",
      "inline": ["echo $(date) > /tmp/rebooted"]
	},
    {
      "type": "shell",
      "inline": ["mkdir /tmp/packer-provisioner-ansible-local/library"]
    },
    {
      "type": "ansible-local",
      "playbook_dir": "{{pwd}}/playbooks",
      "playbook_file": "{{pwd}}/phnmnl-packaging.yml",
      "role_paths": [
        "{{pwd}}/roles/chronos",
        "{{pwd}}/roles/collectd",
        "{{pwd}}/roles/common",
        "{{pwd}}/roles/consul",
        "{{pwd}}/roles/consul-template",
        "{{pwd}}/roles/dnsmasq",
        "{{pwd}}/roles/docker",
        "{{pwd}}/roles/glusterfs",
        "{{pwd}}/roles/logrotate",
        "{{pwd}}/roles/logstash",
        "{{pwd}}/roles/lvm",
        "{{pwd}}/roles/mantlui",
        "{{pwd}}/roles/marathon",
        "{{pwd}}/roles/mesos",
        "{{pwd}}/roles/nginx",
        "{{pwd}}/roles/traefik",
        "{{pwd}}/roles/vault",
        "{{pwd}}/roles/zookeeper",
        "{{pwd}}/roles/handlers"
      ],
      "extra_arguments": [ "--tags", "packaging,always_tag", "--extra-vars=\"provider=openstack\"" ],
      "inventory_groups": "role=edge,role=control,role=worker"
    }
  ]
}
